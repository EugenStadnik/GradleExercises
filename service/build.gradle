// To invoke tasks of 'service' module only type *$ gradlew :service:taskName* for ex.: *$ gradlew :service:build*
// To observe all available (included) modules in the IDEA UI - investigate "Gradle" bookmark
// To observe all available (included) modules as a relationship graph - type *$ gradlew help projects*
plugins {
    id 'java-library' // Use 'java-library' instead of 'java' to support transitive module dependency
    // The 'java-library' is aorg.gradle.api.plugins.JavaLibraryPlugin implementation
    id 'jacoco'
    // The 'jacoco' plugin allows to analyze test coverage
    // setup jacocoTestReport and jacocoTestCoverageVerification tasks dependencies for they to be dependentOn 'test' task
    // and for they to finalizedBy 'test' task
    // for more details refer to https://docs.gradle.org/current/userguide/jacoco_plugin.html#header
    // Another one useful test and source code analyzer plugin is https://docs.gradle.org/current/userguide/checkstyle_plugin.html#header
}

group = 'org.dev'
version = '1.0.2'

repositories {
    mavenCentral()
}

dependencies {
    api project(":database") // Append transitive module dependency
    // apply 'java-library' plugin first

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    // To run tests in parallel
    maxParallelForks 2

    // useTestNG() // To run TestNG tests. Apply TestNG dependencies and configure you tests as TestNG first
    useJUnitPlatform() // To run JUnit 5 tests. Apply JUnit dependencies and configure you tests as JUnit first
    // If no test platform determined the JUnit 4 will be applied by default
    // For more info refer to https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html

    // To run only a specific project (module) tests type *$ gradlew :module:subModule:test*
    // For ex.: gradle :service:test
}
// Before to setup 'jacoco' tasks dependencies import 'jacoco' plugin first
test.finalizedBy jacocoTestReport
jacocoTestReport.dependsOn test
// for more details refer to https://docs.gradle.org/current/userguide/jacoco_plugin.html#header
// Another one useful test and source code analyzer plugin is https://docs.gradle.org/current/userguide/checkstyle_plugin.html#header